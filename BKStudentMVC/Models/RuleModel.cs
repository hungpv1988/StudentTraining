//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BKStudentMVC.Models
{
    using StudentLib.Services;
    using System;
    using System.Collections.Generic;
    using System.Diagnostics;
    using System.Reflection;
    using System.Text;

    public partial class RuleModel
    {
        public int Id { get; set; }
        public string FullName { get; set; }
        public string Description { get; set; }
        public bool Active { get; set; }
        public Nullable<System.DateTime> StartDate { get; set; }
        public Nullable<System.DateTime> EndDate { get; set; }
        public virtual bool InEffect { get { return IsInEffect(); }; }

        public RuleModel() { }
        public RuleModel(IValidationRule rule)
        {
            FullName = rule.GetType().FullName;
            Description = rule.Description;
            Active = true;
        }
        public override string ToString()
        {
            Type objType = this.GetType();
            PropertyInfo[] propertyInfoList = objType.GetProperties();
            StringBuilder result = new StringBuilder();
            foreach (var propertyInfo in propertyInfoList)
            {
                result.Append($"{propertyInfo.Name}={propertyInfo.GetValue(this)}, ");
            }
            return result.ToString();
        }

        private bool IsInEffect()
        {
            try
            {
                if (StartDate == null && EndDate == null && Active)
                {
                    return true;
                }
                if (StartDate != null)
                {
                    if (StartDate > DateTime.Now)
                    {
                        return false;
                    }

                    if (StartDate <= DateTime.Now && Active)
                    {
                        if (EndDate == null)
                        {
                            return true;
                        }
                        if (EndDate > DateTime.Now)
                        {
                            return true;
                        }
                    }
                }
            }
            catch (Exception ex)
            {
                Debug.WriteLine(ex.StackTrace);
            }
            return false;
        }
    }
}
